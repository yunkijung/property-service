server:
  port: 0

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-client: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

greeting:
  message: Welcome to Loglrs.


# key? 32byte (256bit)
jwt:
  secretKey: ${SECRET_KEY}
  refreshKey: ${REFRESH_KEY}

spring:
  application:
    name: property-service
  profiles:
    active: local
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        #        show_sql: true
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.spatial.dialect.mysql.MySQL8SpatialDialect
  #    database-platform: org.hibernate.dialect.MySQL8Dialect
  #    database-platform: org.hibernate.spatial.dialect.mysql.MySQL8SpatialDialect
  #    database-platform: com.yun.room.config.MySQLDialectConfig
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  servlet:
    multipart:
      maxFileSize: 50MB
      maxRequestSize: 50MB

logging.level:
  org.hibernate.SQL: debug
  com:
    amazonaws:
      util:
        EC2MetadataUtils: ERROR
#  org.hibernate.type: trace

geocoding:
  api-key: ${GOOGLE_MAPS_API_KEY}
  service-url: https://maps.googleapis.com/maps/api/geocode/json

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    stack:
      auto: false
    region:
      static: us-east-1
      auto: false
    credentials:
      accessKey: ${IAM_ACCESS_KEY}
      secretKey: ${IAM_SECRET_KEY}

